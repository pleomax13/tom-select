{"version":3,"file":"virtual_scroll.js","sources":["../../../node_modules/@orchidjs/sifter/lib/diacritics.ts","../../../node_modules/@orchidjs/sifter/lib/utils.ts","../../../src/vanilla.ts","../../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { escape_regex } from './utils.ts';\n\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'gu');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'æ': 'ae',\n\t'ⱥ': 'a',\n\t'ø': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'gu');\n\nconst code_points:[[number,number]] = [[ 0, 65535 ]];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter] || foreignletter;\n\t\t});\n};\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\n\tif( chars.length === 1 && chars[0] != undefined ){\n\t\treturn chars[0];\n\t}\n\n\tvar longest = 1;\n\tchars.forEach((a)=>{longest = Math.max(longest,a.length)});\n\n\tif( longest == 1 ){\n\t\treturn '['+chars.join('')+']';\n\t}\n\n\treturn '(?:'+chars.join(glue)+')';\n};\n\nexport const escapeToPattern = (chars:string[]):string =>{\n\tconst escaped = chars.map((diacritic) => escape_regex(diacritic));\n\treturn arrayToPattern(escaped);\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n\n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = (code_points:[[number,number]]):TDiacraticList => {\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\n\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// skip when latin is a string longer than 3 characters long\n\t\t\t// bc the resulting regex patterns will be long\n\t\t\t// eg:\n\t\t\t// latin صلى الله عليه وسلم length 18 code point 65018\n\t\t\t// latin جل جلاله length 8 code point 65019\n\t\t\tif( latin.length > 3 ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst latin_diacritics:string[] = diacritics[latin] || [latin];\n\t\t\tconst patt = new RegExp( escapeToPattern(latin_diacritics),'iu');\n\t\t\tif( diacritic.match(patt) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlatin_diacritics.push(diacritic);\n\t\t\tdiacritics[latin] = latin_diacritics;\n\t\t}\n\t});\n\n\t// filter out if there's only one character in the list\n\t// todo: this may not be needed\n\tObject.keys(diacritics).forEach(latin => {\n\t\tconst latin_diacritics = diacritics[latin] || [];\n\t\tif( latin_diacritics.length < 2 ){\n\t\t\tdelete diacritics[latin];\n\t\t}\n\t});\n\n\n\t// latin character pattern\n\t// match longer substrings first\n\tlet latin_chars\t= Object.keys(diacritics).sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ escapeToPattern(latin_chars) + accent_pat + '*)','gu');\n\n\n\t// build diacritic patterns\n\t// ae needs:\n\t//\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn escapeToPattern(diacritics[l]!);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\n\t});\n\n\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics(code_points);\n\t}\n\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\n\t\t// \"ﬄ\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\n\t\tif( no_accent == '' ){\n\t\t\treturn '';\n\t\t}\n\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\n\t\treturn part;\n\t}).join('');\n\n}\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n/**\n *\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str:string):string => {\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\r\nimport { iterate } from '@orchidjs/sifter/lib/utils';\r\n\r\n/**\r\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\r\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\r\n *\r\n * param query should be {}\r\n */\r\nexport const getDom = ( query:any ):HTMLElement => {\r\n\r\n\tif( query.jquery ){\r\n\t\treturn query[0];\r\n\t}\r\n\r\n\tif( query instanceof HTMLElement ){\r\n\t\treturn query;\r\n\t}\r\n\r\n\tif( isHtmlString(query) ){\r\n\t\tlet div = document.createElement('div');\r\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\r\n\t\treturn div.firstChild as HTMLElement;\r\n\t}\r\n\r\n\treturn document.querySelector(query);\r\n};\r\n\r\nexport const isHtmlString = (arg:any): boolean => {\r\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const escapeQuery = (query:string):string => {\r\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Dispatch an event\r\n *\r\n */\r\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\r\n\tvar event = document.createEvent('HTMLEvents');\r\n\tevent.initEvent(event_name, true, false);\r\n\tdom_el.dispatchEvent(event)\r\n};\r\n\r\n/**\r\n * Apply CSS rules to a dom element\r\n *\r\n */\r\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\r\n\tObject.assign(dom_el.style, css);\r\n}\r\n\r\n\r\n/**\r\n * Add css classes\r\n *\r\n */\r\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n\tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map( cls => {\r\n\t\t\tel.classList.add( cls );\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Remove css classes\r\n *\r\n */\r\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n \tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map(cls => {\r\n\t \t\tel.classList.remove( cls );\r\n\t\t});\r\n \t});\r\n }\r\n\r\n\r\n/**\r\n * Return arguments\r\n *\r\n */\r\nexport const classesArray = (args:string[]|string[][]):string[] => {\r\n\tvar classes:string[] = [];\r\n\titerate( args, (_classes) =>{\r\n\t\tif( typeof _classes === 'string' ){\r\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\r\n\t\t}\r\n\t\tif( Array.isArray(_classes) ){\r\n\t\t\tclasses = classes.concat(_classes);\r\n\t\t}\r\n\t});\r\n\r\n\treturn classes.filter(Boolean);\r\n}\r\n\r\n\r\n/**\r\n * Create an array from arg if it's not already an array\r\n *\r\n */\r\nexport const castAsArray = (arg:any):Array<any> => {\r\n\tif( !Array.isArray(arg) ){\r\n \t\targ = [arg];\r\n \t}\r\n\treturn arg;\r\n}\r\n\r\n\r\n/**\r\n * Get the closest node to the evt.target matching the selector\r\n * Stops at wrapper\r\n *\r\n */\r\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\r\n\r\n\tif( wrapper && !wrapper.contains(target) ){\r\n\t\treturn;\r\n\t}\r\n\r\n\twhile( target && target.matches ){\r\n\r\n\t\tif( target.matches(selector) ){\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\ttarget = target.parentNode as HTMLElement;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get the first or last item from an array\r\n *\r\n * > 0 - right (last)\r\n * <= 0 - left (first)\r\n *\r\n */\r\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\r\n\r\n\tif( direction > 0 ){\r\n\t\treturn list[list.length-1];\r\n\t}\r\n\r\n\treturn list[0];\r\n}\r\n\r\n/**\r\n * Return true if an object is empty\r\n *\r\n */\r\nexport const isEmptyObject = (obj:object):boolean => {\r\n\treturn (Object.keys(obj).length === 0);\r\n}\r\n\r\n\r\n/**\r\n * Get the index of an element amongst sibling nodes of the same type\r\n *\r\n */\r\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\r\n\tif (!el) return -1;\r\n\r\n\tamongst = amongst || el.nodeName;\r\n\r\n\tvar i = 0;\r\n\twhile( el = el.previousElementSibling ){\r\n\r\n\t\tif( el.matches(amongst) ){\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\treturn i;\r\n}\r\n\r\n\r\n/**\r\n * Set attributes of an element\r\n *\r\n */\r\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\r\n\titerate( attrs,(val,attr) => {\r\n\t\tif( val == null ){\r\n\t\t\tel.removeAttribute(attr as string);\r\n\t\t}else{\r\n\t\t\tel.setAttribute(attr as string, ''+val);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Replace a node\r\n */\r\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\r\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\r\n}\r\n","/**\r\n * Plugin: \"restore_on_backspace\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport TomSelect from '../../tom-select';\r\nimport { TomOption } from '../../types/index';\r\nimport { addClasses } from '../../vanilla';\r\n\r\nexport default function(this:TomSelect) {\r\n\tconst self\t\t\t\t\t\t\t= this;\r\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\r\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\r\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\r\n\r\n\tvar pagination:{[key:string]:any}\t= {};\r\n\tvar dropdown_content:HTMLElement;\r\n\tvar loading_more\t\t\t\t\t= false;\r\n\tvar load_more_opt:HTMLElement;\r\n\tvar default_values: string[]\t\t= [];\r\n\r\n\tif( !self.settings.shouldLoadMore ){\r\n\r\n\t\t// return true if additional results should be loaded\r\n\t\tself.settings.shouldLoadMore = ():boolean=>{\r\n\r\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\r\n\t\t\tif( scroll_percent > 0.9 ){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif( self.activeOption ){\r\n\t\t\t\tvar selectable\t= self.selectable();\r\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\r\n\t\t\t\tif( index >= (selectable.length-2) ){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tif( !self.settings.firstUrl ){\r\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\r\n\t}\r\n\r\n\r\n\t// in order for virtual scrolling to work,\r\n\t// options need to be ordered the same way they're returned from the remote data source\r\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\r\n\r\n\r\n\t// can we load more results for given query?\r\n\tconst canLoadMore = (query:string):boolean => {\r\n\r\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif( (query in pagination) && pagination[query] ){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\r\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\r\n\t// set the next url that will be\r\n\tself.setNextUrl = (value:string,next_url:any):void => {\r\n\t\tpagination[value] = next_url;\r\n\t};\r\n\r\n\t// getUrl() to be used in settings.load()\r\n\tself.getUrl = (query:string):any =>{\r\n\r\n\t\tif( query in pagination ){\r\n\t\t\tconst next_url = pagination[query];\r\n\t\t\tpagination[query] = false;\r\n\t\t\treturn next_url;\r\n\t\t}\r\n\r\n\t\t// if the user goes back to a previous query\r\n\t\t// we need to load the first page again\r\n\t\tpagination = {};\r\n\r\n\t\treturn self.settings.firstUrl.call(self,query);\r\n\t};\r\n\r\n\r\n\t// don't clear the active option (and cause unwanted dropdown scroll)\r\n\t// while loading more results\r\n\tself.hook('instead','clearActiveOption',()=>{\r\n\r\n\t\tif( loading_more ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn orig_clearActiveOption.call(self);\r\n\t});\r\n\r\n\t// override the canLoad method\r\n\tself.hook('instead','canLoad',(query:string)=>{\r\n\r\n\t\t// first time the query has been seen\r\n\t\tif( !(query in pagination) ){\r\n\t\t\treturn orig_canLoad.call(self,query);\r\n\t\t}\r\n\r\n\t\treturn canLoadMore(query);\r\n\t});\r\n\r\n\r\n\t// wrap the load\r\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\r\n\r\n\t\tif( !loading_more ){\r\n\t\t\tself.clearOptions(clearFilter);\r\n\t\t}else if( load_more_opt && options.length > 0 ){\r\n\t\t\tload_more_opt.dataset.value\t\t= options[0][self.settings.valueField];\r\n\t\t}\r\n\r\n\t\torig_loadCallback.call( self, options, optgroups);\r\n\r\n\t\tloading_more = false;\r\n\t});\r\n\r\n\r\n\t// add templates to dropdown\r\n\t//\tloading_more if we have another url in the queue\r\n\t//\tno_more_results if we don't have another url in the queue\r\n\tself.hook('after','refreshOptions',()=>{\r\n\r\n\t\tconst query\t\t= self.lastValue;\r\n\t\tvar option;\r\n\r\n\t\tif( canLoadMore(query) ){\r\n\r\n\t\t\toption = self.render('loading_more',{query:query});\r\n\t\t\tif( option ){\r\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\r\n\t\t\t\tload_more_opt = option;\r\n\t\t\t}\r\n\r\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\r\n\t\t\toption = self.render('no_more_results',{query:query});\r\n\t\t}\r\n\r\n\t\tif( option ){\r\n\t\t\taddClasses(option,self.settings.optionClass);\r\n\t\t\tdropdown_content.append( option );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t// add scroll listener and default templates\r\n\tself.on('initialize',()=>{\r\n\t\tdefault_values = Object.keys(self.options);\r\n\t\tdropdown_content = self.dropdown_content;\r\n\r\n\t\t// default templates\r\n\t\tself.settings.render = Object.assign({}, {\r\n\t\t\tloading_more:() => {\r\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\r\n\t\t\t},\r\n\t\t\tno_more_results:() =>{\r\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\r\n\t\t\t}\r\n\t\t},self.settings.render);\r\n\r\n\r\n\t\t// watch dropdown content scroll position\r\n\t\tdropdown_content.addEventListener('scroll',()=>{\r\n\r\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\r\n\t\t\tif( !canLoadMore(self.lastValue) ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// don't call load() too much\r\n\t\t\tif( loading_more ) return;\r\n\r\n\r\n\t\t\tloading_more = true;\r\n\t\t\tself.load.call(self,self.lastValue);\r\n\t\t});\r\n\t});\r\n\r\n};\r\n"],"names":["latin_convert","RegExp","Object","keys","join","iterate","object","callback","Array","isArray","forEach","key","hasOwnProperty","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","map","el","cls","classList","add","args","_classes","trim","split","concat","filter","Boolean","arg","self","orig_canLoad","canLoad","orig_clearActiveOption","clearActiveOption","orig_loadCallback","loadCallback","pagination","dropdown_content","loading_more","load_more_opt","default_values","settings","shouldLoadMore","scroll_percent","clientHeight","scrollHeight","scrollTop","activeOption","selectable","index","from","indexOf","length","firstUrl","sortField","field","canLoadMore","query","maxOptions","children","clearFilter","option","value","items","setNextUrl","next_url","getUrl","call","hook","options","optgroups","clearOptions","dataset","valueField","lastValue","render","setAttribute","querySelector","optionClass","append","on","assign","no_more_results","addEventListener","load"],"mappings":"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"}