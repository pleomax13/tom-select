{"version":3,"file":"checkbox_options.js","sources":["../../../src/utils.ts","../../../node_modules/@orchidjs/sifter/lib/diacritics.ts","../../../src/vanilla.ts","../../../src/plugins/checkbox_options/plugin.ts"],"sourcesContent":["\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n\nexport const generateId = () => {\n\tlet result = ''\n\tconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\tconst charactersLength = characters.length\n\tfor (let i = 0; i < 20; i++) {\n\t\tresult += characters.charAt(Math.floor(Math.random() * charactersLength))\n\t}\n\treturn result\n}\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { escape_regex } from './utils.ts';\n\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'gu');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'æ': 'ae',\n\t'ⱥ': 'a',\n\t'ø': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'gu');\n\nconst code_points:[[number,number]] = [[ 0, 65535 ]];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter] || foreignletter;\n\t\t});\n};\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\n\tif( chars.length === 1 && chars[0] != undefined ){\n\t\treturn chars[0];\n\t}\n\n\tvar longest = 1;\n\tchars.forEach((a)=>{longest = Math.max(longest,a.length)});\n\n\tif( longest == 1 ){\n\t\treturn '['+chars.join('')+']';\n\t}\n\n\treturn '(?:'+chars.join(glue)+')';\n};\n\nexport const escapeToPattern = (chars:string[]):string =>{\n\tconst escaped = chars.map((diacritic) => escape_regex(diacritic));\n\treturn arrayToPattern(escaped);\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n\n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = (code_points:[[number,number]]):TDiacraticList => {\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\n\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// skip when latin is a string longer than 3 characters long\n\t\t\t// bc the resulting regex patterns will be long\n\t\t\t// eg:\n\t\t\t// latin صلى الله عليه وسلم length 18 code point 65018\n\t\t\t// latin جل جلاله length 8 code point 65019\n\t\t\tif( latin.length > 3 ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst latin_diacritics:string[] = diacritics[latin] || [latin];\n\t\t\tconst patt = new RegExp( escapeToPattern(latin_diacritics),'iu');\n\t\t\tif( diacritic.match(patt) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlatin_diacritics.push(diacritic);\n\t\t\tdiacritics[latin] = latin_diacritics;\n\t\t}\n\t});\n\n\t// filter out if there's only one character in the list\n\t// todo: this may not be needed\n\tObject.keys(diacritics).forEach(latin => {\n\t\tconst latin_diacritics = diacritics[latin] || [];\n\t\tif( latin_diacritics.length < 2 ){\n\t\t\tdelete diacritics[latin];\n\t\t}\n\t});\n\n\n\t// latin character pattern\n\t// match longer substrings first\n\tlet latin_chars\t= Object.keys(diacritics).sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ escapeToPattern(latin_chars) + accent_pat + '*)','gu');\n\n\n\t// build diacritic patterns\n\t// ae needs:\n\t//\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn escapeToPattern(diacritics[l]!);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\n\t});\n\n\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics(code_points);\n\t}\n\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\n\t\t// \"ﬄ\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\n\t\tif( no_accent == '' ){\n\t\t\treturn '';\n\t\t}\n\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\n\t\treturn part;\n\t}).join('');\n\n}\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input');\n\t\t\tconst selectedAriaMessage = self.settings.selectedAriaMessage || ''\n\t\t\tconst notSelectedAriaMessage = self.settings.notSelectedAriaMessage || ''\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tconst dataAriaLabel = option.getAttribute('data-aria-label')\n\t\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t\toption.setAttribute('aria-label', `${dataAriaLabel}${selectedAriaMessage ? `, ${selectedAriaMessage},` : ''}`)\n\t\t\t\t}else{\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t\toption.setAttribute('aria-label', `${dataAriaLabel}${notSelectedAriaMessage ? `, ${notSelectedAriaMessage},` : ''}`)\n\t\t\t\t}\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tcheckbox.setAttribute('tabindex', '-1')\n\t\t\tcheckbox.setAttribute('aria-hidden', 'true')\n\t\t\trendered.setAttribute('data-aria-label', rendered.innerText)\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\t\t\tconst dataAriaLabel = rendered.getAttribute('data-aria-label')\n\t\t\tconst selectedAriaMessage = self.settings.selectedAriaMessage || ''\n\t\t\tconst notSelectedAriaMessage = self.settings.notSelectedAriaMessage || ''\n\t\t\tconst checkboxIconHtml = self.settings.checkboxIconHtml || ''\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t\trendered.setAttribute('aria-label', `${dataAriaLabel}${selectedAriaMessage ? `, ${selectedAriaMessage},` : ''}`)\n\t\t\t} else {\n\t\t\t\trendered.setAttribute('aria-label', `${dataAriaLabel}${notSelectedAriaMessage ? `, ${notSelectedAriaMessage},` : ''}`)\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\n\t\t\tif (checkboxIconHtml) {\n\t\t\t\tcheckbox.insertAdjacentHTML('afterend', checkboxIconHtml)\n\t\t\t}\n\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n"],"names":["hash_key","value","get_hash","preventDefault","evt","stop","stopPropagation","latin_convert","RegExp","Object","keys","join","getDom","query","jquery","HTMLElement","isHtmlString","div","document","createElement","innerHTML","trim","firstChild","querySelector","arg","indexOf","self","orig_onOptionSelect","onOptionSelect","settings","hideSelected","UpdateCheckbox","option","setTimeout","checkbox","selectedAriaMessage","notSelectedAriaMessage","HTMLInputElement","dataAriaLabel","getAttribute","classList","contains","checked","setAttribute","hook","orig_render_option","render","data","escape_html","rendered","call","addEventListener","type","innerText","hashed","valueField","checkboxIconHtml","items","prepend","insertAdjacentHTML","on","getOption","remove","removeItem","dataset","refreshOptions"],"mappings":"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"}