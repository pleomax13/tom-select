{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/sifter/lib/diacritics.ts","../../node_modules/@orchidjs/sifter/lib/utils.ts","../../node_modules/@orchidjs/sifter/lib/sifter.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/tom-select.complete.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/caret_position/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self, args );\n\t\t\t}\n\t\t});\n\t}\n};\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { escape_regex } from './utils.ts';\n\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'gu');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'æ': 'ae',\n\t'ⱥ': 'a',\n\t'ø': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'gu');\n\nconst code_points:[[number,number]] = [[ 0, 65535 ]];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter] || foreignletter;\n\t\t});\n};\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\n\tif( chars.length === 1 && chars[0] != undefined ){\n\t\treturn chars[0];\n\t}\n\n\tvar longest = 1;\n\tchars.forEach((a)=>{longest = Math.max(longest,a.length)});\n\n\tif( longest == 1 ){\n\t\treturn '['+chars.join('')+']';\n\t}\n\n\treturn '(?:'+chars.join(glue)+')';\n};\n\nexport const escapeToPattern = (chars:string[]):string =>{\n\tconst escaped = chars.map((diacritic) => escape_regex(diacritic));\n\treturn arrayToPattern(escaped);\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n\n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = (code_points:[[number,number]]):TDiacraticList => {\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\n\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// skip when latin is a string longer than 3 characters long\n\t\t\t// bc the resulting regex patterns will be long\n\t\t\t// eg:\n\t\t\t// latin صلى الله عليه وسلم length 18 code point 65018\n\t\t\t// latin جل جلاله length 8 code point 65019\n\t\t\tif( latin.length > 3 ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst latin_diacritics:string[] = diacritics[latin] || [latin];\n\t\t\tconst patt = new RegExp( escapeToPattern(latin_diacritics),'iu');\n\t\t\tif( diacritic.match(patt) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlatin_diacritics.push(diacritic);\n\t\t\tdiacritics[latin] = latin_diacritics;\n\t\t}\n\t});\n\n\t// filter out if there's only one character in the list\n\t// todo: this may not be needed\n\tObject.keys(diacritics).forEach(latin => {\n\t\tconst latin_diacritics = diacritics[latin] || [];\n\t\tif( latin_diacritics.length < 2 ){\n\t\t\tdelete diacritics[latin];\n\t\t}\n\t});\n\n\n\t// latin character pattern\n\t// match longer substrings first\n\tlet latin_chars\t= Object.keys(diacritics).sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ escapeToPattern(latin_chars) + accent_pat + '*)','gu');\n\n\n\t// build diacritic patterns\n\t// ae needs:\n\t//\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn escapeToPattern(diacritics[l]!);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\n\t});\n\n\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics(code_points);\n\t}\n\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\n\t\t// \"ﬄ\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\n\t\tif( no_accent == '' ){\n\t\t\treturn '';\n\t\t}\n\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\n\t\treturn part;\n\t}).join('');\n\n}\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n/**\n *\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str:string):string => {\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n // @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { scoreValue, getAttr, getAttrNesting, escape_regex, propToArray, iterate, cmp } from './utils.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { diacriticRegexPoints } from './diacritics.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from 'types.ts';\n\nexport default class Sifter{\n\n\tpublic items; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1]!;\n\t\t\t\tword\t= field_match[2]!;\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = diacriticRegexPoints(word);\n\t\t\t\t}else{\n\t\t\t\t\tregex = escape_regex(word);\n\t\t\t\t}\n\t\t\t\tif( respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'iu') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options:T.Options ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0].field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar i = 0, score, sum = 0;\n\t\t\t\tfor (; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.Options) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar i, n, implicit_score;\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort,\n\t\tsort_flds:T.Sort[]\t\t= [],\n\t\tmultipliers:number[]\t= [];\n\n\n\t\tif( typeof sort == 'function' ){\n\t\t\treturn sort.bind(this);\n\t\t}\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tsort_flds.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\tsort_flds.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\tvar i, result, field;\n\t\t\tfor (i = 0; i < sort_flds_count; i++) {\n\t\t\t\tfield = sort_flds[i].field;\n\n\t\t\t\tlet multiplier = multipliers[i];\n\t\t\t\tif( multiplier == undefined ){\n\t\t\t\t\tmultiplier = sort_flds[i].direction === 'desc' ? -1 : 1;\n\t\t\t\t}\n\n\t\t\t\tresult = multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t\tif (result) return result;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:Partial<T.Options>):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser);\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\n\t\treturn {\n\t\t\toptions\t\t: options,\n\t\t\tquery\t\t: query.toLowerCase().trim(),\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.Options) : T.PrepareObj {\n\t\tvar self = this, score, search:T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (_:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n\nexport const generateId = () => {\n\tlet result = ''\n\tconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\tconst charactersLength = characters.length\n\tfor (let i = 0; i < 20; i++) {\n\t\tresult += characters.charAt(Math.floor(Math.random() * charactersLength))\n\t}\n\treturn result\n}\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:Partial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport Sifter from '@orchidjs/sifter/lib/sifter';\nimport { escape_regex, iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:Partial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId,\n\t\t\t'aria-multiselectable': `${self.settings.mode === 'multi'}`\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\n\t\taddEvent(focus_node,'resize',\t\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\t\tconst win_hover = () => {\n\t\t\tself.ignoreHover = false;\n\t\t};\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\t\taddEvent(window,'mousemove', win_hover, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('mousemove',win_hover);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece) => {\n\n\t\t\t\tpiece = hash_key(piece);\n\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\tself.addItem(piece);\n\t\t\t\t}else{\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null; //self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( self.activeOption ){\n\t\t\tactive_value = self.activeOption.dataset.value;\n\t\t\tactive_group = self.activeOption.closest('[data-group]') as HTMLElement;\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet opt_value\t\t= results.items[i].id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\t\t\tlet option_el\t\t= self.getOption(opt_value,true) as HTMLElement;\n\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\tconst isSelected = self.items.includes(opt_value)\n\t\t\t\tconst selectedAriaMessage = this.settings?.selectedAriaMessage ? this.settings.selectedAriaMessage() : ''\n\t\t\t\tconst notSelectedAriaMessage = this.settings?.notSelectedAriaMessage ? this.settings.notSelectedAriaMessage() : ''\n\n\t\t\t\toption_el.classList.toggle('selected', isSelected );\n\n\t\t\t\tif (isSelected) {\n\t\t\t\t\toption_el.setAttribute('aria-description', selectedAriaMessage)\n\t\t\t\t} else {\n\t\t\t\t\toption_el.setAttribute('aria-description', notSelectedAriaMessage)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( !active_option && active_value == opt_value ){\n\t\t\t\t\tif( active_group ){\n\t\t\t\t\t\tif( active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup) => {\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, groups[optgroup] );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, groups[optgroup] );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\t\tif( !self.options.hasOwnProperty(value_old) ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || self.options[value_old].$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option,key)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string, create:boolean=false):null|HTMLElement {\n\t\tconst hashed = hash_key(value);\n\n\t\tif( hashed !== null && this.options.hasOwnProperty(hashed) ){\n\t\t\tconst option = this.options[hashed];\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret]);\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( html == null ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tself.options[value].$div = html;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option, value)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input');\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t}else{\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tcheckbox.setAttribute('tabindex', '-1')\n\t\t\tcheckbox.setAttribute('aria-hidden', 'true')\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\t\t\tconst checkboxIconHtml = self.settings.checkboxIconHtml || ''\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\n\t\t\tif (checkboxIconHtml) {\n\t\t\t\tcheckbox.insertAdjacentHTML('afterend', checkboxIconHtml)\n\t\t\t}\n\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isDisabled ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt && options.length > 0 ){\n\t\t\tload_more_opt.dataset.value\t\t= options[0][self.settings.valueField];\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","latin_pat","accent_pat","accent_reg","RegExp","diacritic_patterns","latin_convert","convert_pat","Object","keys","join","code_points","asciifold","str","normalize","replace","toLowerCase","foreignletter","arrayToPattern","chars","glue","undefined","longest","a","Math","max","escapeToPattern","escaped","map","diacritic","escape_regex","allSubstrings","input","result","substring","subresult","tmp","slice","charAt","unshift","diacriticRegexPoints","regex","diacritics","code_range","i","String","fromCharCode","latin","latin_diacritics","patt","match","latin_chars","sort","b","pattern","sub_pat","l","hasOwnProperty","generateDiacritics","part","no_accent","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","propToArray","key","Array","isArray","iterate","object","cmp","Sifter","items","settings","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_empty","sort_flds","multipliers","bind","get_field","id","direction","sort_flds_count","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","div","document","createElement","innerHTML","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","settings_element","dataset","json","JSON","parse","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","super","requested","loaded","static","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","win_hover","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","optgroup_header","escape","option_create","no_results","not_loading","callbacks","initialize","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","_this$settings","_this$settings2","isSelected","includes","selectedAriaMessage","notSelectedAriaMessage","createDocumentFragment","$id","toString","$order","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","all","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","start","selectionStart","selectionEnd","rm_items","shouldDelete","pop","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","from","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","orig_onOptionSelect","UpdateCheckbox","checkbox","HTMLInputElement","checked","orig_render_option","rendered","checkboxIconHtml","prepend","insertAdjacentHTML","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","orig_onBlur","relatedTarget","preventScroll","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results"],"mappings":"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"}